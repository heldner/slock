diff --git a/slock.c b/slock.c
index 1a4d6e3..b93871a 100644
--- a/slock.c
+++ b/slock.c
@@ -18,6 +18,7 @@
 #include <X11/keysym.h>
 #include <X11/Xlib.h>
 #include <X11/Xutil.h>
+#include <X11/XF86keysym.h>
 #include <Imlib2.h>
 
 #include "arg.h"
@@ -161,6 +162,18 @@ readpw(Display *dpy, struct xrandr *rr, struct lock **locks, int nscreens,
 			    IsPrivateKeypadKey(ksym))
 				continue;
 			switch (ksym) {
+      case XF86XK_AudioPlay:
+      case XF86XK_AudioStop:
+      case XF86XK_AudioPrev:
+      case XF86XK_AudioNext:
+      case XF86XK_AudioRaiseVolume:
+      case XF86XK_AudioLowerVolume:
+      case XF86XK_AudioMute:
+      case XF86XK_AudioMicMute:
+      case XF86XK_MonBrightnessDown:
+      case XF86XK_MonBrightnessUp:
+        XSendEvent(dpy, DefaultRootWindow(dpy), True, KeyPressMask, &ev);
+        break;
 			case XK_Return:
 				passwd[len] = '\0';
 				errno = 0;
@@ -240,7 +253,7 @@ lockscreen(Display *dpy, struct xrandr *rr, int screen)
 	lock->screen = screen;
 	lock->root = RootWindow(dpy, lock->screen);
 
-    if(image) 
+    if(image)
     {
         lock->bgmap = XCreatePixmap(dpy, lock->root, DisplayWidth(dpy, lock->screen), DisplayHeight(dpy, lock->screen), DefaultDepth(dpy, lock->screen));
         imlib_context_set_image(image);
@@ -379,20 +392,20 @@ main(int argc, char **argv) {
 	imlib_context_set_image(image);
 	imlib_context_set_display(dpy);
 	imlib_context_set_visual(DefaultVisual(dpy,0));
-	imlib_context_set_drawable(RootWindow(dpy,XScreenNumberOfScreen(scr)));	
+	imlib_context_set_drawable(RootWindow(dpy,XScreenNumberOfScreen(scr)));
 	imlib_copy_drawable_to_image(0,0,0,scr->width,scr->height,0,0,1);
 
 #ifdef BLUR
 
 	/*Blur function*/
 	imlib_image_blur(blurRadius);
-#endif // BLUR	
+#endif // BLUR
 
 #ifdef PIXELATION
 	/*Pixelation*/
 	int width = scr->width;
 	int height = scr->height;
-	
+
 	for(int y = 0; y < height; y += pixelSize)
 	{
 		for(int x = 0; x < width; x += pixelSize)
@@ -401,7 +414,7 @@ main(int argc, char **argv) {
 			int green = 0;
 			int blue = 0;
 
-			Imlib_Color pixel; 
+			Imlib_Color pixel;
 			Imlib_Color* pp;
 			pp = &pixel;
 			for(int j = 0; j < pixelSize && j < height; j++)
@@ -424,8 +437,8 @@ main(int argc, char **argv) {
 			blue = 0;
 		}
 	}
-	
-	
+
+
 #endif
 	/* check for Xrandr support */
 	rr.active = XRRQueryExtension(dpy, &rr.evbase, &rr.errbase);
